<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ö–∞—Ç–∞–ª–æ–≥</title>
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f5f5f5;
        }
        .container {
            padding: 16px;
            padding-bottom: 70px;
        }
        .product-card {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            margin-bottom: 16px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        .product-gallery {
            position: relative;
            height: 300px;
            overflow: hidden;
        }
        .product-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s;
        }
        .gallery-nav {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            width: 100%;
            display: flex;
            justify-content: space-between;
            padding: 0 16px;
        }
        .nav-btn {
            background: rgba(0,0,0,0.5);
            color: white;
            border: none;
            width: 36px;
            height: 36px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }
        .product-info {
            padding: 16px;
        }
        .product-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 12px;
        }
        .product-name {
            font-size: 18px;
            font-weight: bold;
        }
        .product-price {
            font-size: 18px;
            color: #ff6b6b;
            font-weight: bold;
        }
        .product-meta {
            display: flex;
            gap: 12px;
            margin-bottom: 12px;
            color: #666;
            font-size: 14px;
        }
        .favorite-btn {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: #ccc;
        }
        .favorite-btn.active {
            color: #ff6b6b;
        }
        .details-btn {
            display: block;
            width: 100%;
            padding: 12px;
            background: #007bff;
            color: white;
            border: none;
            border-radius: 8px;
            text-align: center;
            margin-top: 12px;
            cursor: pointer;
        }
        .bottom-nav {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            background: white;
            display: flex;
            justify-content: space-around;
            padding: 12px 0;
            box-shadow: 0 -2px 8px rgba(0,0,0,0.1);
        }
        .nav-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            cursor: pointer;
        }
        .nav-icon {
            font-size: 24px;
            margin-bottom: 4px;
        }
        .empty-state {
            text-align: center;
            padding: 40px 20px;
            color: #666;
        }
        .empty-state-btn {
            margin-top: 16px;
            padding: 10px 20px;
            background: #007bff;
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div id="app">
        <div class="container" id="catalog-page">
            <h2>–ö–∞—Ç–∞–ª–æ–≥</h2>
            <div id="product-list"></div>
        </div>

        <div class="container" id="favorites-page" style="display: none;">
            <h2>–ò–∑–±—Ä–∞–Ω–Ω–æ–µ</h2>
            <div id="favorites-list"></div>
            <div class="empty-state" id="empty-favorites" style="display: none;">
                <p>–í—ã –µ—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ!</p>
                <button class="empty-state-btn" onclick="showCatalog()">–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥</button>
            </div>
        </div>

        <div class="container" id="cart-page" style="display: none;">
            <h2>–ö–æ—Ä–∑–∏–Ω–∞</h2>
            <div id="cart-items"></div>
            <div class="empty-state" id="empty-cart" style="display: none;">
                <p>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!</p>
                <button class="empty-state-btn" onclick="showCatalog()">–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥</button>
            </div>
            <div id="order-total" style="margin-top: 20px; display: none;">
                <h3>–ò—Ç–æ–≥–æ: <span id="total-amount">0</span> —Ä—É–±.</h3>
                <button class="details-btn" onclick="placeOrder()">–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</button>
            </div>
            <div id="view-history" style="margin-top: 30px;">
                <h3>–í—ã —Å–º–æ—Ç—Ä–µ–ª–∏</h3>
                <div id="history-list"></div>
            </div>
        </div>

        <div class="container" id="profile-page" style="display: none;">
            <h2>–ü—Ä–æ—Ñ–∏–ª—å</h2>
            <div id="user-info"></div>
            <div style="margin-top: 20px;">
                <h3>–ú–æ–∏ –∑–∞–∫–∞–∑—ã</h3>
                <div id="orders-list"></div>
                <div class="empty-state" id="empty-orders" style="display: none;">
                    <p>–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤</p>
                </div>
            </div>
        </div>

        <div class="bottom-nav">
            <div class="nav-item" onclick="showCatalog()">
                <span class="nav-icon">üõçÔ∏è</span>
                <span>–ö–∞—Ç–∞–ª–æ–≥</span>
            </div>
            <div class="nav-item" onclick="showFavorites()">
                <span class="nav-icon">‚ù§Ô∏è</span>
                <span>–ò–∑–±—Ä–∞–Ω–Ω–æ–µ</span>
            </div>
            <div class="nav-item" onclick="showCart()">
                <span class="nav-icon">üõí</span>
                <span>–ö–æ—Ä–∑–∏–Ω–∞</span>
            </div>
            <div class="nav-item" onclick="showProfile()">
                <span class="nav-icon">üë§</span>
                <span>–ü—Ä–æ—Ñ–∏–ª—å</span>
            </div>
        </div>
    </div>

    <script>
        let products = [];
        let userData = {
            favorites: [],
            cart: [],
            view_history: [],
            orders: [],
            profile: {}
        };

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebApp
        Telegram.WebApp.expand();
        Telegram.WebApp.enableClosingConfirmation();

        // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        async function loadData() {
            try {
                const response = await fetch('https://your-server.com/get_data', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        action: 'get_user_data'
                    })
                });
                const data = await response.json();
                userData = data;
                renderAll();
            } catch (error) {
                console.error('Error loading data:', error);
            }
        }

        // –†–µ–Ω–¥–µ—Ä –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
        function renderAll() {
            renderCatalog();
            renderFavorites();
            renderCart();
            renderProfile();
        }

        // –†–µ–Ω–¥–µ—Ä –∫–∞—Ç–∞–ª–æ–≥–∞
        function renderCatalog() {
            const productList = document.getElementById('product-list');
            productList.innerHTML = '';

            products.forEach(product => {
                const isFavorite = userData.favorites.some(fav => fav.id === product.id);
                
                const productCard = document.createElement('div');
                productCard.className = 'product-card';
                productCard.innerHTML = `
                    <div class="product-gallery">
                        <img src="${product.photos[0]}" alt="${product.name}" class="product-image">
                        <div class="gallery-nav">
                            <button class="nav-btn">‚Üê</button>
                            <button class="nav-btn">‚Üí</button>
                        </div>
                    </div>
                    <div class="product-info">
                        <div class="product-header">
                            <div>
                                <div class="product-name">${product.name}, ${product.age}</div>
                                <div class="product-meta">
                                    <span>${product.height} —Å–º</span>
                                    <span>${product.weight} –∫–≥</span>
                                    <span>${product.chest} —Ä–∞–∑–º–µ—Ä</span>
                                </div>
                            </div>
                            <div class="product-price">${product.price} —Ä—É–±/—á–∞—Å</div>
                        </div>
                        <button class="favorite-btn ${isFavorite ? 'active' : ''}" onclick="toggleFavorite('${product.id}')">‚ù§</button>
                        <button class="details-btn" onclick="showProductDetails('${product.id}')">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
                    </div>
                `;
                productList.appendChild(productCard);
            });
        }

        // –†–µ–Ω–¥–µ—Ä –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
        function renderFavorites() {
            const favoritesList = document.getElementById('favorites-list');
            const emptyFavorites = document.getElementById('empty-favorites');
            
            favoritesList.innerHTML = '';
            
            if (userData.favorites.length === 0) {
                emptyFavorites.style.display = 'block';
                favoritesList.style.display = 'none';
            } else {
                emptyFavorites.style.display = 'none';
                favoritesList.style.display = 'block';
                
                userData.favorites.forEach(product => {
                    const productCard = document.createElement('div');
                    productCard.className = 'product-card';
                    productCard.innerHTML = `
                        <div class="product-gallery">
                            <img src="${product.photos[0]}" alt="${product.name}" class="product-image">
                        </div>
                        <div class="product-info">
                            <div class="product-header">
                                <div>
                                    <div class="product-name">${product.name}, ${product.age}</div>
                                    <div class="product-meta">
                                        <span>${product.height} —Å–º</span>
                                        <span>${product.weight} –∫–≥</span>
                                        <span>${product.chest} —Ä–∞–∑–º–µ—Ä</span>
                                    </div>
                                </div>
                                <div class="product-price">${product.price} —Ä—É–±/—á–∞—Å</div>
                            </div>
                            <button class="favorite-btn active" onclick="toggleFavorite('${product.id}')">‚ù§</button>
                            <button class="details-btn" onclick="showProductDetails('${product.id}')">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
                        </div>
                    `;
                    favoritesList.appendChild(productCard);
                });
            }
        }

        // –†–µ–Ω–¥–µ—Ä –∫–æ—Ä–∑–∏–Ω—ã
        function renderCart() {
            const cartItems = document.getElementById('cart-items');
            const emptyCart = document.getElementById('empty-cart');
            const orderTotal = document.getElementById('order-total');
            const totalAmount = document.getElementById('total-amount');
            const historyList = document.getElementById('history-list');
            
            cartItems.innerHTML = '';
            historyList.innerHTML = '';
            
            if (userData.cart.length === 0) {
                emptyCart.style.display = 'block';
                cartItems.style.display = 'none';
                orderTotal.style.display = 'none';
            } else {
                emptyCart.style.display = 'none';
                cartItems.style.display = 'block';
                orderTotal.style.display = 'block';
                
                let total = 0;
                
                userData.cart.forEach(item => {
                    const product = item.product;
                    const hours = item.hours;
                    const sum = product.price * hours;
                    total += sum;
                    
                    const cartItem = document.createElement('div');
                    cartItem.className = 'product-card';
                    cartItem.innerHTML = `
                        <div class="product-info">
                            <div class="product-header">
                                <div>
                                    <div class="product-name">${product.name}</div>
                                    <div class="product-meta">
                                        <span>${hours} —á–∞—Å(–∞/–æ–≤)</span>
                                        <span>${product.price} —Ä—É–±/—á–∞—Å</span>
                                    </div>
                                </div>
                                <div class="product-price">${sum} —Ä—É–±</div>
                            </div>
                        </div>
                    `;
                    cartItems.appendChild(cartItem);
                });
                
                totalAmount.textContent = total;
            }
            
            // –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
            if (userData.view_history.length > 0) {
                userData.view_history.forEach(product => {
                    const historyItem = document.createElement('div');
                    historyItem.className = 'product-card';
                    historyItem.style.marginBottom = '10px';
                    historyItem.innerHTML = `
                        <div class="product-info" style="display: flex; align-items: center; padding: 10px;">
                            <img src="${product.photos[0]}" alt="${product.name}" style="width: 50px; height: 50px; border-radius: 8px; object-fit: cover; margin-right: 10px;">
                            <div style="flex-grow: 1;">
                                <div style="font-weight: bold;">${product.name}</div>
                                <div style="font-size: 12px; color: #666;">${product.price} —Ä—É–±/—á–∞—Å</div>
                            </div>
                            <button style="background: #007bff; color: white; border: none; border-radius: 4px; padding: 5px 10px; cursor: pointer;" onclick="showProductDetails('${product.id}')">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å</button>
                        </div>
                    `;
                    historyList.appendChild(historyItem);
                });
            }
        }

        // –†–µ–Ω–¥–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è
        function renderProfile() {
            const userInfo = document.getElementById('user-info');
            const ordersList = document.getElementById('orders-list');
            const emptyOrders = document.getElementById('empty-orders');
            
            userInfo.innerHTML = `
                <div style="background: white; padding: 16px; border-radius: 12px;">
                    <h3 style="margin-top: 0;">${userData.profile.name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</h3>
                </div>
            `;
            
            ordersList.innerHTML = '';
            
            if (userData.orders.length === 0) {
                emptyOrders.style.display = 'block';
                ordersList.style.display = 'none';
            } else {
                emptyOrders.style.display = 'none';
                ordersList.style.display = 'block';
                
                userData.orders.forEach(order => {
                    const orderItem = document.createElement('div');
                    orderItem.className = 'product-card';
                    orderItem.style.marginBottom = '10px';
                    orderItem.innerHTML = `
                        <div class="product-info">
                            <div style="display: flex; justify-content: space-between;">
                                <div style="font-weight: bold;">–ó–∞–∫–∞–∑ #${order.order_id}</div>
                                <div style="color: #ff6b6b; font-weight: bold;">${order.total} —Ä—É–±</div>
                            </div>
                            <div style="margin-top: 8px; font-size: 14px; color: #666;">
                                –¢–æ–≤–∞—Ä–æ–≤: ${order.products.length}
                            </div>
                        </div>
                    `;
                    ordersList.appendChild(orderItem);
                });
            }
        }

        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
        function toggleFavorite(productId) {
            const isFavorite = userData.favorites.some(fav => fav.id === productId);
            
            if (isFavorite) {
                sendDataToBot({
                    action: 'remove_from_favorites',
                    product_id: productId
                });
            } else {
                sendDataToBot({
                    action: 'add_to_favorites',
                    product_id: productId
                });
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            if (isFavorite) {
                userData.favorites = userData.favorites.filter(fav => fav.id !== productId);
            } else {
                const product = products.find(p => p.id === productId);
                if (product) userData.favorites.push(product);
            }
            
            renderAll();
        }

        // –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ —Ç–æ–≤–∞—Ä–∞
        function showProductDetails(productId) {
            const product = products.find(p => p.id === productId);
            if (!product) return;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
            if (!userData.view_history.some(p => p.id === productId)) {
                userData.view_history.unshift(product);
                if (userData.view_history.length > 5) {
                    userData.view_history = userData.view_history.slice(0, 5);
                }
            }
            
            // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –¥–µ—Ç–∞–ª—è–º–∏
            const modal = document.createElement('div');
            modal.style.position = 'fixed';
            modal.style.top = '0';
            modal.style.left = '0';
            modal.style.right = '0';
            modal.style.bottom = '0';
            modal.style.backgroundColor = 'rgba(0,0,0,0.8)';
            modal.style.zIndex = '1000';
            modal.style.padding = '20px';
            modal.style.overflowY = 'auto';
            
            const isFavorite = userData.favorites.some(fav => fav.id === productId);
            
            modal.innerHTML = `
                <div style="background: white; border-radius: 12px; padding: 16px; max-width: 500px; margin: 0 auto;">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 16px;">
                        <h2 style="margin: 0;">${product.name}, ${product.age}</h2>
                        <button onclick="this.parentElement.parentElement.parentElement.remove()" style="background: none; border: none; font-size: 24px; cursor: pointer;">√ó</button>
                    </div>
                    
                    <div class="product-gallery" style="height: 400px; margin-bottom: 16px;">
                        <img src="${product.photos[0]}" alt="${product.name}" class="product-image" style="width: 100%; height: 100%; object-fit: cover; border-radius: 8px;">
                    </div>
                    
                    <div style="margin-bottom: 16px;">
                        <h3 style="margin-top: 0;">–û–±–æ –º–Ω–µ</h3>
                        <p>${product.description}</p>
                    </div>
                    
                    <div style="margin-bottom: 16px;">
                        <h3 style="margin-top: 0;">–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h3>
                        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px;">
                            <div><strong>–í–æ–∑—Ä–∞—Å—Ç:</strong> ${product.age}</div>
                            <div><strong>–†–æ—Å—Ç:</strong> ${product.height} —Å–º</div>
                            <div><strong>–í–µ—Å:</strong> ${product.weight} –∫–≥</div>
                            <div><strong>–ì—Ä—É–¥—å:</strong> ${product.chest} —Ä–∞–∑–º–µ—Ä</div>
                        </div>
                    </div>
                    
                    <div style="margin-bottom: 16px;">
                        <h3 style="margin-top: 0;">–î–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è</h3>
                        <div style="display: flex; gap: 8px; flex-wrap: wrap;">
                            ${product.hours_available.map(hour => `
                                <button onclick="addToCart('${productId}', ${hour})" style="padding: 8px 16px; background: #007bff; color: white; border: none; border-radius: 8px; cursor: pointer;">
                                    ${hour} —á–∞—Å(–∞/–æ–≤) - ${hour * product.price} —Ä—É–±
                                </button>
                            `).join('')}
                        </div>
                    </div>
                    
                    <div style="display: flex; justify-content: space-between; align-items: center;">
                        <button class="favorite-btn ${isFavorite ? 'active' : ''}" onclick="toggleFavorite('${productId}')" style="font-size: 24px; background: none; border: none; cursor: pointer;">‚ù§</button>
                        <div style="font-size: 20px; font-weight: bold; color: #ff6b6b;">${product.price} —Ä—É–±/—á–∞—Å</div>
                    </div>
                </div>
            `;
            
            document.body.appendChild(modal);
        }

        // –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
        function addToCart(productId, hours) {
            const product = products.find(p => p.id === productId);
            if (!product) return;
            
            sendDataToBot({
                action: 'add_to_cart',
                product_id: productId,
                hours: hours
            });
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            userData.cart.push({
                product: product,
                hours: hours
            });
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            document.querySelector('div[style*="position: fixed; top: 0"]')?.remove();
            
            renderAll();
        }

        // –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
        function placeOrder() {
            sendDataToBot({
                action: 'place_order'
            });
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            userData.orders.push({
                order_id: 'temp_' + Date.now(),
                products: [...userData.cart],
                total: userData.cart.reduce((sum, item) => sum + (item.product.price * item.hours), 0)
            });
            
            userData.cart = [];
            renderAll();
        }

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç–∞
        function sendDataToBot(data) {
            Telegram.WebApp.sendData(JSON.stringify(data));
        }

        // –ù–∞–≤–∏–≥–∞—Ü–∏—è
        function showCatalog() {
            document.getElementById('catalog-page').style.display = 'block';
            document.getElementById('favorites-page').style.display = 'none';
            document.getElementById('cart-page').style.display = 'none';
            document.getElementById('profile-page').style.display = 'none';
        }

        function showFavorites() {
            document.getElementById('catalog-page').style.display = 'none';
            document.getElementById('favorites-page').style.display = 'block';
            document.getElementById('cart-page').style.display = 'none';
            document.getElementById('profile-page').style.display = 'none';
        }

        function showCart() {
            document.getElementById('catalog-page').style.display = 'none';
            document.getElementById('favorites-page').style.display = 'none';
            document.getElementById('cart-page').style.display = 'block';
            document.getElementById('profile-page').style.display = 'none';
        }

        function showProfile() {
            document.getElementById('catalog-page').style.display = 'none';
            document.getElementById('favorites-page').style.display = 'none';
            document.getElementById('cart-page').style.display = 'none';
            document.getElementById('profile-page').style.display = 'block';
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        document.addEventListener('DOMContentLoaded', () => {
            // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É)
            products = [
                {
                    id: '1',
                    name: '–ê–Ω–Ω–∞',
                    age: 23,
                    height: 168,
                    weight: 55,
                    chest: 3,
                    price: 5000,
                    description: '–ü—Ä–∏–≤–µ—Ç, —è –ê–Ω–Ω–∞! –õ—é–±–ª—é –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö –∏ –¥–ª–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—É–ª–∫–∏. –û—Ç–∫—Ä—ã—Ç–∞ –∫ –Ω–æ–≤—ã–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞–º –∏ –æ–±—â–µ–Ω–∏—é.',
                    photos: [
                        'https://i.pinimg.com/736x/40/eb/e0/40ebe0b9e8d1046f173eb26a61009d81.jpg',
                        'https://i.pinimg.com/736x/d5/46/5f/d5465facf810f00a584037d6d951121d.jpg',
                        'https://i.pinimg.com/564x/ac/0d/10/ac0d1064bcc926541bf8941c7a069c6b.jpg'
                    ],
                    hours_available: [1, 2, 4, 6, 12]
                },
                {
                    id: '2',
                    name: '–ú–∞—Ä–∏—è',
                    age: 25,
                    height: 172,
                    weight: 58,
                    chest: 2,
                    price: 6000,
                    description: '–ú–µ–Ω—è –∑–æ–≤—É—Ç –ú–∞—Ä–∏—è. –Ø —Ç–≤–æ—Ä—á–µ—Å–∫–∞—è –ª–∏—á–Ω–æ—Å—Ç—å, –ª—é–±–ª—é –∏—Å–∫—É—Å—Å—Ç–≤–æ –∏ –º—É–∑—ã–∫—É. –í—Å–µ–≥–¥–∞ —Ä–∞–¥–∞ –Ω–æ–≤—ã–º –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º.',
                    photos: [
                        'https://i.pinimg.com/474x/1e/00/97/1e0097a81c088c49c32d6fa3c4018b32.jpg',
                        'https://i.pinimg.com/736x/77/d3/38/77d33805d0708b4de31bc80ec7da9a49.jp'
                    ],
                    hours_available: [1, 2, 4, 8]
                }
            ];
            
            // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
            loadData();
        });
    </script>
</body>
</html>
